func fib(n) {
	a := 0
	b := 1

	for i := 0; i < n; i += 1 {
		new_a := b
		b += a
		a = new_a
	}

	return b
}

n := input("How many fibonacci numbers do you want? ")
n = ston(n)

print("Computing...")

nums := array()
array_resize(nums, n)

ticks := perf_count()

for i := 0; i < n; i += 1 {
	val := fib(i)
	array_set(nums, i, val)
}

elapsed := perf_count() - ticks

print("Done computing numbers.")
printf("That took %g seconds.\n", elapsed / perf_freq())

filename := input("Where would you like to output them? ")

file := fopen(filename, "w")

if not file {
	printf("Couldn't open file '%s' for writing.\n", filename)
	exit(1)
}

ticks = perf_count()

for i = 0; i < n; i += 1 {
	sn := ntos(array_get(nums, i))
	fwrite(file, strcat(sn, "\n"))
}

elapsed = perf_count() - ticks

fclose(file)

print("Done.")
printf("That took %g seconds.\n", elapsed / perf_freq())
